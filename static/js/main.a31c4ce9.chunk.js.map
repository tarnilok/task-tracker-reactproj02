{"version":3,"sources":["components/CreateTask.js","components/Button.js","components/Header.js","components/TaskItem.js","components/TaskList.js","store/initialStates.js","App.js","reportWebVitals.js","index.js"],"names":["CreateTask","onCreate","useState","text","setText","day","setDay","className","onSubmit","e","preventDefault","isDone","alert","htmlFor","id","name","type","placeholder","value","onChange","target","Button","color","toggleShow","style","backgroundColor","onClick","Header","title","isTaskBarShowed","TaskItem","task","onDelete","toggleDone","onDoubleClick","cursor","TaskList","tasks","map","initialState","App","setTasks","setIsTaskBarShowed","prevState","Date","now","newTask","length","deletedItemID","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAEe,SAASA,EAAT,GAAmC,IAAbC,EAAY,EAAZA,SAAY,EACvBC,mBAAS,IADc,mBACxCC,EADwC,KAClCC,EADkC,OAEzBF,mBAAS,IAFgB,mBAExCG,EAFwC,KAEnCC,EAFmC,KAkB/C,OACE,uBAAMC,UAAU,WAAWC,SAZZ,SAACC,GAChBA,EAAEC,iBACGP,GAASE,GAGZJ,EAAS,CAAEE,OAAME,MAAKM,QAAQ,IAC9BP,EAAQ,IACRE,EAAO,KAJPM,MAAM,4BASR,UACE,sBAAKL,UAAU,eAAf,UACE,uBAAOM,QAAQ,OAAf,kBACA,uBACEC,GAAG,OACHC,KAAK,OACLC,KAAK,OACLC,YAAY,oBAEZC,MAAOf,EACPgB,SAzBiB,SAACV,GAAD,OAAOL,EAAQK,EAAEW,OAAOF,aA4B7C,sBAAKX,UAAU,eAAf,UACE,uBAAOM,QAAQ,MAAf,wBACA,uBACEC,GAAG,MACHC,KAAK,MACLC,KAAK,OACLC,YAAY,uBAEZC,MAAOb,EACPc,SApCgB,SAACV,GAAD,OAAOH,EAAOG,EAAEW,OAAOF,aAuC3C,uBAAOF,KAAK,SAASE,MAAM,YAAYX,UAAU,qBChCxCc,MAdf,YAA8C,IAA5BlB,EAA2B,EAA3BA,KAAMmB,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,WAC7B,OACE,8BACE,wBACEhB,UAAU,MACViB,MAAO,CAAEC,gBAAiBH,GAC1BI,QAASH,EAHX,SAKGpB,OCmBMwB,MAvBf,YAAyD,IAAvCC,EAAsC,EAAtCA,MAAOL,EAA+B,EAA/BA,WAAYM,EAAmB,EAAnBA,gBACnC,OACE,yBAAQtB,UAAU,SAAlB,UACE,6BAAKqB,IACL,cAAC,EAAD,CACEN,MAAOO,EAAkB,YAAc,SACvC1B,KACE0B,EAAkB,yBAA2B,yBAE/CN,WAAYA,Q,OCXPO,EAAW,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,WACzC,OACE,sBACE1B,UAAS,eAAUwB,EAAKpB,OAAS,OAAS,IAC1CuB,cAAe,kBAAMD,EAAWF,EAAKjB,KAFvC,UAIE,+BACGiB,EAAK5B,KACN,cAAC,IAAD,CACEqB,MAAO,CAAEF,MAAO,MAAOa,OAAQ,WAC/BT,QAAS,kBAAMM,EAASD,EAAKjB,UAGjC,4BAAIiB,EAAK1B,UCbA,SAAS+B,EAAT,GAAkD,IAA/BC,EAA8B,EAA9BA,MAAOL,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,WAEjD,OACE,8BACGI,EAAMC,KAAI,SAACP,GAAD,OACT,cAAC,EAAD,CAAwBA,KAAMA,EAAMC,SAAUA,EAAUC,WAAYA,GAArDF,EAAKjB,SCPrB,IAAMyB,EAAe,CACxB,CACEzB,GAAI,EACJX,KAAM,8BACNE,IAAK,oBACLM,QAAQ,GAEV,CACEG,GAAI,EACJX,KAAM,eACNE,IAAK,oBACLM,QAAQ,GAEV,CACEG,GAAI,EACJX,KAAM,kBACNE,IAAK,qBACLM,QAAQ,ICmCC6B,MA7Cf,WAAgB,IAAD,EACatC,mBAASqC,GADtB,mBACNF,EADM,KACCI,EADD,OAEiCvC,oBAAS,GAF1C,mBAEN2B,EAFM,KAEWa,EAFX,KA2Bb,OACE,sBAAKnC,UAAU,YAAf,UACE,cAAC,EAAD,CACEqB,MAAO,eACPC,gBAAiBA,EACjBN,WAPa,kBAAMmB,GAAmB,SAACC,GAAD,OAAgBA,QASvDd,GAAmB,cAAC7B,EAAD,CAAYC,SA7BnB,SAAC8B,GAChB,IAAMjB,EAAK8B,KAAKC,MACVC,EAAO,aAAKhC,MAAOiB,GACzBU,GAAS,SAACE,GAAD,4BAAmBA,GAAnB,CAA8BG,UA4BpCT,EAAMU,OAAS,EACd,cAACX,EAAD,CAAUC,MAAOA,EAAOL,SAzBb,SAACgB,GAAD,OACfP,EAASJ,EAAMY,QAAO,SAAClB,GAAD,OAAUA,EAAKjB,KAAOkC,OAwBIf,WArB/B,SAACnB,GAClB2B,EACEJ,EAAMC,KAAI,SAACP,GAAD,OACRA,EAAKjB,KAAOA,EAAZ,2BAAsBiB,GAAtB,IAA4BpB,QAASoB,EAAKpB,SAAWoB,SAoBrD,oDClCOmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a31c4ce9.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default function CreateTask({ onCreate }) {\r\n  const [text, setText] = useState(\"\");\r\n  const [day, setDay] = useState(\"\");\r\n\r\n  const handleTextChange = (e) => setText(e.target.value);\r\n  const handleDayChange = (e) => setDay(e.target.value);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!text || !day) {\r\n      alert(\"Please fill both fields\");\r\n    } else {\r\n      onCreate({ text, day, isDone: false });\r\n      setText(\"\");\r\n      setDay(\"\");\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <form className=\"add-form\" onSubmit={onSubmit}>\r\n      <div className=\"form-control\">\r\n        <label htmlFor=\"task\">Task</label>\r\n        <input\r\n          id=\"task\"\r\n          name=\"text\"\r\n          type=\"text\"\r\n          placeholder=\"Enter a task name\"\r\n          // required\r\n          value={text}\r\n          onChange={handleTextChange}\r\n        />\r\n      </div>\r\n      <div className=\"form-control\">\r\n        <label htmlFor=\"day\">Day & Time</label>\r\n        <input\r\n          id=\"day\"\r\n          name=\"day\"\r\n          type=\"text\"\r\n          placeholder=\"Enter a day and time\"\r\n          // required\r\n          value={day}\r\n          onChange={handleDayChange}\r\n        />\r\n      </div>\r\n      <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\" />\r\n    </form>\r\n  );\r\n}\r\n","function Button({ text, color, toggleShow }) {\r\n  return (\r\n    <div>\r\n      <button\r\n        className=\"btn\"\r\n        style={{ backgroundColor: color }}\r\n        onClick={toggleShow}\r\n      >\r\n        {text}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Button from \"./Button\";\r\n// import PropTypes from 'prop-types';\r\n\r\nfunction Header({ title, toggleShow, isTaskBarShowed }) {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>{title}</h1>\r\n      <Button\r\n        color={isTaskBarShowed ? \"steelblue\" : \"purple\"}\r\n        text={\r\n          isTaskBarShowed ? \"Hide Create a Task Bar\" : \"Show Create a Task Bar\"\r\n        }\r\n        toggleShow={toggleShow}\r\n      />\r\n    </header>\r\n  );\r\n}\r\n\r\n// Header.defaultProps = {\r\n//     title: 'Task Tracker as default'\r\n// }\r\n\r\n// Header.propTypes = {\r\n//     title: PropTypes.string.isRequired,\r\n// };\r\n\r\nexport default Header;\r\n","import { FaTimes } from \"react-icons/fa\";\r\n\r\nexport const TaskItem = ({ task, onDelete, toggleDone }) => {\r\n  return (\r\n    <div\r\n      className={`task ${task.isDone ? \"done\" : \"\"}`}\r\n      onDoubleClick={() => toggleDone(task.id)}\r\n    >\r\n      <h3>\r\n        {task.text}\r\n        <FaTimes\r\n          style={{ color: \"red\", cursor: \"pointer\" }}\r\n          onClick={() => onDelete(task.id)}\r\n        />\r\n      </h3>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  );\r\n};\r\n","import { TaskItem } from \"./TaskItem\";\r\n\r\nexport default function TaskList({tasks, onDelete, toggleDone}) {\r\n  \r\n  return (\r\n    <div>\r\n      {tasks.map((task) => (\r\n        <TaskItem key={task.id} task={task} onDelete={onDelete} toggleDone={toggleDone} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","export const initialState = [\r\n    {\r\n      id: 1,\r\n      text: \"Study React Pre-Class Notes\",\r\n      day: \"Feb 5th at 2:30pm\",\r\n      isDone: false,\r\n    },\r\n    {\r\n      id: 2,\r\n      text: \"Feed the Dog\",\r\n      day: \"Feb 6th at 1:30pm\",\r\n      isDone: false,\r\n    },\r\n    {\r\n      id: 3,\r\n      text: \"Attend in-Class\",\r\n      day: \"Feb 7th at 20:00pm\",\r\n      isDone: false,\r\n    },\r\n];","import { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport CreateTask from \"./components/CreateTask\";\r\nimport Header from \"./components/Header\";\r\nimport TaskList from \"./components/TaskList\";\r\nimport { initialState } from \"./store/initialStates\";\r\n\r\nfunction App() {\r\n  const [tasks, setTasks] = useState(initialState);\r\n  const [isTaskBarShowed, setIsTaskBarShowed] = useState(false);\r\n\r\n  // Create a task\r\n  const onCreate = (task) => {\r\n    const id = Date.now();\r\n    const newTask = { id, ...task };\r\n    setTasks((prevState) => [...prevState, newTask]);\r\n  };\r\n\r\n  // Delete Task\r\n  const onDelete = (deletedItemID) =>\r\n    setTasks(tasks.filter((task) => task.id !== deletedItemID));\r\n\r\n  // Toggle Done\r\n  const toggleDone = (id) => {\r\n    setTasks(\r\n      tasks.map((task) =>\r\n        task.id === id ? { ...task, isDone: !task.isDone } : task\r\n      )\r\n    );\r\n  };\r\n\r\n  // Toggle Show and hide\r\n  const toggleShow = () => setIsTaskBarShowed((prevState) => !prevState);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Header\r\n        title={\"Task Tracker\"}\r\n        isTaskBarShowed={isTaskBarShowed}\r\n        toggleShow={toggleShow}\r\n      />\r\n      {isTaskBarShowed && <CreateTask onCreate={onCreate} />}\r\n\r\n      {tasks.length > 0 ? (\r\n        <TaskList tasks={tasks} onDelete={onDelete} toggleDone={toggleDone} />\r\n      ) : (\r\n        <p>No Task to show</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}